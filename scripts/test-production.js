#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js'

// Configura√ß√£o
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o configuradas')
  console.log('Configure NEXT_PUBLIC_SUPABASE_URL e NEXT_PUBLIC_SUPABASE_ANON_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function testProduction() {
  console.log('üß™ Testando configura√ß√£o de produ√ß√£o...\n')

  try {
    // Teste 1: Conex√£o com banco
    console.log('1. Testando conex√£o com banco...')
    const { error: dbError } = await supabase.from('photos').select('count').limit(1)
    if (dbError) throw new Error(`Banco: ${dbError.message}`)
    console.log('‚úÖ Conex√£o com banco OK')

    // Teste 2: Storage
    console.log('2. Testando storage...')
    const { data: buckets, error: storageError } = await supabase.storage.listBuckets()
    if (storageError) throw new Error(`Storage: ${storageError.message}`)
    
    const photosBucket = buckets.find(b => b.name === 'photos')
    if (!photosBucket) throw new Error('Bucket "photos" n√£o encontrado')
    console.log('‚úÖ Storage OK')

    // Teste 3: Pol√≠ticas RLS
    console.log('3. Testando pol√≠ticas RLS...')
    const { error: policyError } = await supabase.storage.from('photos').list('', { limit: 1 })
    if (policyError) throw new Error(`Pol√≠ticas: ${policyError.message}`)
    console.log('‚úÖ Pol√≠ticas RLS OK')

    console.log('\nüéâ Tudo configurado corretamente para produ√ß√£o!')
    console.log('\nüìã Pr√≥ximos passos:')
    console.log('1. Configure CORS no Supabase Dashboard')
    console.log('2. Fa√ßa deploy no Vercel')
    console.log('3. Configure vari√°veis de ambiente no Vercel')
    console.log('4. Teste o QR code em produ√ß√£o')

  } catch (error) {
    console.error(`‚ùå Erro: ${error.message}`)
    console.log('\nüîß Solu√ß√µes:')
    console.log('- Verifique as vari√°veis de ambiente')
    console.log('- Execute as queries SQL no Supabase')
    console.log('- Configure as pol√≠ticas RLS')
    process.exit(1)
  }
}

testProduction() 